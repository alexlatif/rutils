
[package]
name = "utils"
version = "0.1.0"
edition = "2021"

[dependencies]
anyhow = "1.0.86"
colored = "2.1.0"
error-stack = { version = "0.5.0", features = ["anyhow"] }
futures = "0.3.30"
futures-util = "0.3.30"
http = { version = "1.1.0", optional = true }
k8s-openapi = { version = "0.22.0", features = ["v1_30"] }
kube = "0.93.1"
once_cell = "1.19.0"
opentelemetry = { version = "0.24.0", optional = true, features = ["metrics"] }
opentelemetry-appender-tracing = { version = "0.5.0", optional = true }
opentelemetry-otlp = { version = "0.17.0", optional = true, features = ["grpc-tonic", "http-proto", "reqwest-client"] }
opentelemetry-semantic-conventions = { version = "0.16.0", optional = true }
opentelemetry_sdk = { version = "0.24.1", optional = true, features = ["metrics"] }
parking_lot = "0.12.3"
podman-api = "0.10.0"
redis = { version = "0.25.4", features = ["aio", "tokio-comp"] }
regex = "1.10.6"
rstest = "0.21.0"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117"
tempfile = "3.11.0"
time = { version = "0.3.36", features = ["local-offset"] }
tokio = { version = "1.38.0", features = ["full", "tracing"] }
tracing = "0.1.40"
tracing-appender = "0.2.3"
tracing-core = "0.1.32"
tracing-log = { version = "0.2.0", optional = true }
tracing-opentelemetry = { version = "0.25.0", optional = true }
tracing-subscriber = { version = "0.3.18", features = ["time"] }

# [features]
# opentelemetry-grpc = ["dep:tracing-log", "dep:opentelemetry-appender-tracing", "dep:opentelemetry_sdk", "dep:tracing-opentelemetry", "dep:opentelemetry", "dep:opentelemetry-otlp", "dep:opentelemetry-semantic-conventions", "dep:http", "opentelemetry-otlp/grpc-tonic"]
# opentelemetry-http = ["dep:tracing-log", "dep:opentelemetry-appender-tracing", "dep:opentelemetry_sdk", "dep:tracing-opentelemetry", "dep:opentelemetry", "dep:opentelemetry-otlp", "dep:opentelemetry-semantic-conventions", "dep:http", "opentelemetry-otlp/grpc-tonic", "opentelemetry-otlp/http-proto", "opentelemetry-otlp/reqwest-client"]
[features]
default = ["opentelemetry-http", "log-filter"]
opentelemetry-grpc = [
    "tracing-log", 
    "opentelemetry-appender-tracing", 
    "opentelemetry_sdk", 
    "tracing-opentelemetry", 
    "opentelemetry", 
    "opentelemetry-otlp", 
    "opentelemetry-semantic-conventions", 
    "http", 
    "opentelemetry-otlp/grpc-tonic"
]
opentelemetry-http = [
    "tracing-log", 
    "opentelemetry-appender-tracing", 
    "opentelemetry_sdk", 
    "tracing-opentelemetry", 
    "opentelemetry", 
    "opentelemetry-otlp", 
    "opentelemetry-semantic-conventions", 
    "http", 
    "opentelemetry-otlp/http-proto", 
    "opentelemetry-otlp/reqwest-client"
]
opentelemetry = ["dep:opentelemetry"]
opentelemetry_sdk = ["dep:opentelemetry_sdk"]

# tracing-opentelemetry = ["dep:tracing-opentelemetry"]
# tracing-log = ["dep:tracing-log"]
# opentelemetry = ["dep:opentelemetry"]
# opentelemetry-appender-tracing = ["dep:opentelemetry-appender-tracing"]
# opentelemetry-otlp = ["dep:opentelemetry-otlp"]
# opentelemetry-semantic-conventions = ["dep:opentelemetry-semantic-conventions"]
# opentelemetry_sdk = ["dep:opentelemetry_sdk"]
# http = ["dep:http"]