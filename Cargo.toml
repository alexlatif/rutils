
[package]
name = "utils"
version = "0.1.0"
edition = "2021"

[dependencies]
anyhow = "1.0.86"
chrono = "0.4.38"
colored = "2.1.0"
error-stack = { version = "0.5.0", features = ["anyhow"] }
futures = "0.3.30"
futures-util = "0.3.30"
http = { version = "1.1.0", optional = true }
k8s-openapi = { version = "0.22.0", features = ["v1_30"] }
kube = "0.93.1"
once_cell = "1.19.0"
opentelemetry-appender-tracing = { version = "0.2.0", optional = true }
opentelemetry-otlp = { version = "0.14", optional = true, features = ["grpc-tonic", "http-proto", "reqwest-client", "logs", "trace", "metrics"] }
opentelemetry-semantic-conventions = { version = "0.13.0", optional = true }
parking_lot = "0.12.3"
podman-api = "0.10.0"
redis = { version = "0.25.4", features = ["aio", "tokio-comp"] }
regex = "1.10.6"
rstest = "0.21.0"
serde = { version = "1.0.203", features = ["derive"] }
serde_json = "1.0.117"
sysinfo = "0.30"
tempfile = "3.11.0"
time = { version = "0.3.36", features = ["local-offset"] }
tokio = { version = "1.38.0", features = ["full", "tracing"] }
tracing = "0.1.40"
tracing-appender = "0.2.3"
tracing-core = "0.1.32"
tracing-log = { version = "0.2.0", optional = true }
# bump potential 
# opentelemetry = { version = "0.21", optional = true, features = ["metrics", "trace"] }
# opentelemetry_sdk = { version = "0.21", optional = true, features = ["metrics", "rt-tokio" ] }
# tracing-subscriber = { version = "0.3", features = ["time", "fmt", "std"] }
opentelemetry = { version = "0.24", features = ["metrics", "trace"] }
opentelemetry_sdk = { version = "0.24.1", features = ["metrics", "rt-tokio" ] }
tracing-subscriber = { version = "0.3.18", features = ["time", "fmt", "std", "env-filter"] }
tracing-opentelemetry = { version = "0.25.0" }

# [features]
# default = ["opentelemetry-http", "opentelemetry-grpc"]
# log-filter = []
# opentelemetry-grpc = ["dep:tracing-log", "dep:opentelemetry-appender-tracing", "dep:opentelemetry_sdk", "dep:tracing-opentelemetry", "dep:opentelemetry", "dep:opentelemetry-otlp", "dep:opentelemetry-semantic-conventions", "dep:http", "opentelemetry-otlp/grpc-tonic"]
# opentelemetry-http = ["dep:tracing-log", "dep:opentelemetry-appender-tracing", "dep:opentelemetry_sdk", "dep:tracing-opentelemetry", "dep:opentelemetry", "dep:opentelemetry-otlp", "dep:opentelemetry-semantic-conventions", "dep:http", "opentelemetry-otlp/grpc-tonic", "opentelemetry-otlp/http-proto", "opentelemetry-otlp/reqwest-client"]

# opentelemetry-grpc = [
#     "tracing-log", 
#     "opentelemetry-appender-tracing", 
#     "opentelemetry_sdk", 
#     "tracing-opentelemetry", 
#     "opentelemetry", 
#     "opentelemetry-otlp", 
#     "opentelemetry-semantic-conventions", 
#     "http", 
#     "opentelemetry-otlp/grpc-tonic"
# ]
# opentelemetry-http = [
#     "tracing-log", 
#     "opentelemetry-appender-tracing", 
#     "opentelemetry_sdk", 
#     "tracing-opentelemetry", 
#     "opentelemetry", 
#     "opentelemetry-otlp", 
#     "opentelemetry-semantic-conventions", 
#     "http", 
#     "opentelemetry-otlp/http-proto", 
#     "opentelemetry-otlp/reqwest-client"
# ]
# opentelemetry = ["dep:opentelemetry"]
# opentelemetry_sdk = ["dep:opentelemetry_sdk"]

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.hostname]
version = "0.3.1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.tokio]
features = ["time", "sync"]
version = "1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.tracing-appender]
version = "0.2"
